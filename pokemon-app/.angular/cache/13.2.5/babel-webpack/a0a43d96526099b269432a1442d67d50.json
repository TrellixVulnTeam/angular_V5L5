{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\cparradoc\\\\Documents\\\\GitHub\\\\angular\\\\pokemon-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/request.service\";\nexport class PokemonListComponent {\n  //Inicializacion/llamada del servicio\n  constructor(RequestService) {\n    var _this = this;\n\n    this.RequestService = RequestService;\n    this.pokemonList = [];\n    this.baseURL = 'https://pokeapi.co/api/v2/pokemon/?limit=';\n    this.limit = 151; //primera generacion\n\n    this.RequestService.getCharacters(this.baseURL + this.limit).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        const results = data.results;\n        let pokemon = [];\n\n        for (let pokeIterable in results) {\n          let id = pokeIterable['url'].split('/');\n          yield pokemon.push(yield fetch(pokemon['url']).then( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator(function* (response) {\n              return response.json();\n            });\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()).then( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator(function* (data) {\n              return {\n                id: Number(id[id.length - 2]),\n                name: pokemon['name'],\n                url: pokemon['url'],\n                image: data['sprites']['front_default']\n              };\n            });\n\n            return function (_x3) {\n              return _ref3.apply(this, arguments);\n            };\n          }()));\n        }\n\n        _this.pokemonList = pokemon;\n        console.log(_this.pokemonList);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  ngOnInit() {\n    callRequestService(this.baseURL + '25');\n  }\n\n}\n\nPokemonListComponent.ɵfac = function PokemonListComponent_Factory(t) {\n  return new (t || PokemonListComponent)(i0.ɵɵdirectiveInject(i1.RequestService));\n};\n\nPokemonListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PokemonListComponent,\n  selectors: [[\"app-pokemon-list\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"main-content__list\"]],\n  template: function PokemonListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Buscar pok\\u00E9mon\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2tlbW9uLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"]\n});\n\nfunction callRequestService(url) {\n  var _this2 = this;\n\n  //getCharacters oara guardar los resultados\n  this.RequestService.getCharacters(url).subscribe( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator(function* (data) {\n      const results = data.results;\n      let pokemon = [];\n\n      for (let pokeIterable in results) {\n        let id = pokeIterable['url'].split('/');\n        yield pokemon.push(yield fetch(pokemon['url']).then( /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator(function* (response) {\n            return response.json();\n          });\n\n          return function (_x5) {\n            return _ref5.apply(this, arguments);\n          };\n        }()).then( /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator(function* (data) {\n            return {\n              id: Number(id[id.length - 2]),\n              name: pokemon['name'],\n              url: pokemon['url'],\n              image: data['sprites']['front_default']\n            };\n          });\n\n          return function (_x6) {\n            return _ref6.apply(this, arguments);\n          };\n        }()));\n      }\n\n      _this2.PokemonResponseInterface = data;\n      _this2.PokemonResponseInterface.results = pokemon;\n    });\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n}","map":{"version":3,"sources":["C:/Users/cparradoc/Documents/GitHub/angular/pokemon-app/src/app/pokemon-list/pokemon-list.component.ts"],"names":["i0","i1","PokemonListComponent","constructor","RequestService","pokemonList","baseURL","limit","getCharacters","subscribe","data","results","pokemon","pokeIterable","id","split","push","fetch","then","response","json","Number","length","name","url","image","console","log","ngOnInit","callRequestService","ɵfac","PokemonListComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","PokemonListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles","PokemonResponseInterface"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./services/request.service\";\r\nexport class PokemonListComponent {\r\n    //Inicializacion/llamada del servicio\r\n    constructor(RequestService) {\r\n        this.RequestService = RequestService;\r\n        this.pokemonList = [];\r\n        this.baseURL = 'https://pokeapi.co/api/v2/pokemon/?limit=';\r\n        this.limit = 151; //primera generacion\r\n        this.RequestService.getCharacters(this.baseURL + this.limit).\r\n            subscribe(async (data) => {\r\n            const results = data.results;\r\n            let pokemon = [];\r\n            for (let pokeIterable in results) {\r\n                let id = pokeIterable['url'].split('/');\r\n                await pokemon.push(await fetch(pokemon['url']).then(async (response) => response.json())\r\n                    .then(async (data) => {\r\n                    return { id: Number(id[id.length - 2]),\r\n                        name: pokemon['name'],\r\n                        url: pokemon['url'],\r\n                        image: data['sprites']['front_default'] };\r\n                }));\r\n            }\r\n            this.pokemonList = pokemon;\r\n            console.log(this.pokemonList);\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        callRequestService(this.baseURL + '25');\r\n    }\r\n}\r\nPokemonListComponent.ɵfac = function PokemonListComponent_Factory(t) { return new (t || PokemonListComponent)(i0.ɵɵdirectiveInject(i1.RequestService)); };\r\nPokemonListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PokemonListComponent, selectors: [[\"app-pokemon-list\"]], decls: 3, vars: 0, consts: [[1, \"main-content__list\"]], template: function PokemonListComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\r\n        i0.ɵɵtext(2, \"Buscar pok\\u00E9mon\");\r\n        i0.ɵɵelementEnd()();\r\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2tlbW9uLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"] });\r\nfunction callRequestService(url) {\r\n    //getCharacters oara guardar los resultados\r\n    this.RequestService.getCharacters(url).subscribe(async (data) => {\r\n        const results = data.results;\r\n        let pokemon = [];\r\n        for (let pokeIterable in results) {\r\n            let id = pokeIterable['url'].split('/');\r\n            await pokemon.push(await fetch(pokemon['url']).then(async (response) => response.json())\r\n                .then(async (data) => {\r\n                return { id: Number(id[id.length - 2]),\r\n                    name: pokemon['name'],\r\n                    url: pokemon['url'],\r\n                    image: data['sprites']['front_default'] };\r\n            }));\r\n        }\r\n        this.PokemonResponseInterface = data;\r\n        this.PokemonResponseInterface.results = pokemon;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}